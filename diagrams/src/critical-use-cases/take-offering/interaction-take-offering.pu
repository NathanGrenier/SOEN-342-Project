@startuml
title Sequence Diagram for Instructor Taking an Offering

actor Instructor
participant Terminal
participant App
participant OfferingRecords
participant Offering
participant InstructorRecords

activate Terminal

Instructor -> Terminal: viewOfferings()
activate App
Terminal -> App: getAvailableOfferings(Instructor)

App -> OfferingRecords: filterOfferingsByAvailability(Instructor)
OfferingRecords --> App: List of Available Offerings
App --> Terminal: List of Available Offerings
deactivate App
Terminal --> Instructor: Display available Offerings

Instructor -> Terminal: acceptOffering(offeringId)
activate App
Terminal -> App: acceptOffering(offeringId, Instructor)

App -> OfferingRecords: getOfferingById(offeringId)
alt Offering exists and is unassigned
    OfferingRecords --> App: Offering instance
    App -> Offering: setInstructor(Instructor)
    Offering --> App: Offering marked as accepted
    App -> OfferingRecords: updateOffering(Offering)
    OfferingRecords --> App: Update successful
    App --> Terminal: "Offering successfully accepted."
else Offering is invalid or already assigned
    OfferingRecords --> App: null or error
    App --> Terminal: "Error: Offering is unavailable or already assigned."
end

deactivate App
Terminal --> Instructor: Display status message

deactivate Terminal
@enduml
